int check(stack *top)
{
	return (top == NULL)?2:0;
}

int takeElem1(stack **top, stack **elem)
{
	if (*top == NULL)
		return 2;
	stack *del = *top;
	(*elem)->e = (*top)->e;
	*top = (*top)->next;
	delete del;
	return 0;
}

int takeElem2(stack **top, int *a)
{
	if (*top == NULL)
		return 2;
	stack *del = *top;
	*a = (*top)->e;
	*top = (*top)->next;
	delete del;
	return 0;
}

stack *input(stack *top) //простой ввод с клавиатуры
{
	for (int i = 5; i; i--)
	{
		stack *curr = new stack;
		scanf_s("%d", &curr->e);
		curr->next = top;
		top = curr;
	}
	return top;
}

void showStack(stack *top) // показать исходную последовательность без изменения стека
{
	stack *bottom = NULL;
	for (stack *r = top; r!= NULL; r = r->next)
	{
		stack *curr = new stack;
		curr->e = r->e;
		curr->next = bottom;
		bottom = curr;
	}
	for (stack *r = bottom; r != NULL; r = r->next)
		printf_s("%d ", r->e);
}

